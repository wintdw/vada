secrets:
  es_elastic:
    file: /var/secret/docker/es/elastic
  crm:
    file: /var/secret/docker/crm/vada

networks:
  etl_network:
    driver: bridge

services:
  es_inserter:
    build:
      context: .
      dockerfile: Dockerfile.es_inserter
    image: es_inserter:latest
    container_name: es_inserter
    restart: always
    environment:
      PORT: "8000"
      ELASTIC_PASSWD_FILE: /run/secrets/es_elastic
      ELASTIC_USER: elastic
      ELASTIC_URL: http://demo.internal.vadata.vn:9200
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
    secrets:
      - es_elastic
    ports:
      - "8000:8000"
    networks:
      - etl_network

  ingestor:
    build:
      context: .
      dockerfile: Dockerfile.ingestor
    image: ingestor:latest
    container_name: ingestor
    restart: always
    environment:
      PORT: "8001"
      KAFKA_BROKER_URL: kafka.ilb.vadata.vn:9092
      KAFKA_TOPIC: dev_input
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
    ports:
      - "8001:8001"
    networks:
      - etl_network
  
  kafka_to_es:
    build:
      context: .
      dockerfile: Dockerfile.kafka_to_es
    image: kafka_to_es:latest
    container_name: kafka_to_es
    restart: always
    environment:
      PORT: "8002"
      ELASTIC_PASSWD_FILE: /run/secrets/es_elastic
      ELASTIC_USER: elastic
      ELASTIC_URL: http://demo.internal.vadata.vn:9200
      KAFKA_BROKER_URL: kafka.ilb.vadata.vn:9092
      KAFKA_TOPIC: dev_input
      MAPPINGS_BASEURL: http://mappings.internal.vadata.vn
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
    secrets:
      - es_elastic
      - crm
    ports:
      - "8002:8002"
    networks:
      - etl_network

