secrets:
  es_elastic:
    file: /var/secret/docker/es/elastic
  es_elastic_vtad:
    file: /var/secret/docker/es/elastic_vtad
  mongo_vada:
    file: /var/secret/docker/mongo/vada

networks:
  etl-network:
    driver: bridge

services:
  ingestor:
    build:
      context: ./ingestor
      dockerfile: Dockerfile
    image: ingestor:latest
    container_name: ingestor
    restart: always
    environment:
      KAFKA_BROKER_URL: kafka.ilb.vadata.vn:9092
      KAFKA_TOPIC: dev_input
    ports:
      - "8000:8000"
    networks:
      - etl-network

  es_inserter_vtad:
    build:
      context: ./es_inserter
      dockerfile: Dockerfile.es_inserter
    image: es-inserter:latest
    container_name: es_inserter_vtad
    restart: always
    environment:
      ELASTIC_PASSWD_FILE: /run/secrets/es_elastic_vtad
      ELASTIC_USER: elastic
      ELASTIC_URL: http://setup.internal.vadata.vn:9209
      PORT: "8001"
    secrets:
      - es_elastic_vtad
    ports:
      - "8001:8001"
    networks:
      - etl-network

  es_inserter:
    build:
      context: ./es_inserter
      dockerfile: Dockerfile.es_inserter
    image: es-inserter:latest
    container_name: es_inserter
    restart: always
    environment:
      ELASTIC_PASSWD_FILE: /run/secrets/es_elastic
      ELASTIC_USER: elastic
      ELASTIC_URL: http://demo.internal.vadata.vn:9200
      PORT: "8002"
    secrets:
      - es_elastic
    ports:
      - "8002:8002"
    networks:
      - etl-network
  
  kafka_to_es:
    build:
      context: ./es_inserter
      dockerfile: Dockerfile.kafka_to_es
    image: kafka-to-es:latest
    container_name: kafka_to_es
    restart: always
    environment:
      ELASTIC_PASSWD_FILE: /run/secrets/es_elastic
      ELASTIC_USER: elastic
      ELASTIC_URL: http://demo.internal.vadata.vn:9200
      KAFKA_BROKER_URL: kafka.ilb.vadata.vn:9092
      KAFKA_TOPIC: dev_input
      MONGO_URI_FILE: /run/secrets/mongo_vada
    secrets:
      - es_elastic
      - mongo_vada
    ports:
      - "8003:8003"
    networks:
      - etl-network

